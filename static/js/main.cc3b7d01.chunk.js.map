{"version":3,"sources":["Card.jsx","App.js","index.js"],"names":["date","Date","weeday","getDay","newMonth","getMonth","year","getFullYear","Card","name","temp","result","icon","dailys","todayDate","getDate","newDate","console","log","className","src","alt","map","daily","temperature","Math","floor","day","weather","App","data","useState","tog","setTog","initialValue","useRef","showData","setShowData","key","getData","a","current","value","axios","get","coord","lat","lon","length","forEach","elem","push","celsius","main","class","type","id","ref","placeholder","autoComplete","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc3b7d01.chunk.js","sourcesContent":["import React from \"react\";\nconst date = new Date();\nconst day = date.getDay();\nconst week = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\nconst weeday = week[day];\n\nconst month = date.getMonth();\nconst monthList = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\nconst newMonth = monthList[month];\nconst year = date.getFullYear();\n\nconst Card = ({ name, temp, result, icon, dailys }) => {\n  const todayDate = date.getDate();\n  let newDate = todayDate;\n\n  return (\n    <>\n      {console.log(todayDate)}\n      {console.log(\"card\")}\n      <div className=\"card card-weather\">\n        <div className=\"card-body\">\n          <div className=\"weather-date-location\">\n            <h3>{weeday}</h3>\n            <p className=\"text-gray\">\n              <span className=\"weather-date\">\n                {todayDate} {newMonth}, {year}\n              </span>\n              <span className=\"weather-location\">{name}</span>\n            </p>\n          </div>\n          <div className=\"weather-data d-flex\">\n            <div className=\"mr-auto\">\n              <h4 className=\"display-3\">\n                {temp}\n                <span className=\"symbol\">°</span>C\n              </h4>\n              <p>{result} </p>\n              <p>\n                <img\n                  src={`http://openweathermap.org/img/wn/${icon}.png`}\n                  alt=\"icons\"\n                />\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* {console.log(dailys)} */}\n      <div className=\"card-container\">\n        {dailys.map((daily) => {\n          // console.log(daily.temp.day)\n          let temperature = Math.floor(daily.temp.day - 273.15);\n          return (\n            <>\n              <div className=\"card-container-main\">\n                <p className=\"\">{++newDate} </p>\n                <img\n                  src={`http://openweathermap.org/img/wn/${daily.weather[0].icon}.png`}\n                  alt=\"icons\"\n                />\n                <p className=\"\">\n                  {temperature} <span className=\"symbol\">°</span>C{\" \"}\n                </p>\n              </div>{\" \"}\n              <hr />\n              {/* {console.log(\"yyyy\")} */}\n            </>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default Card;\n","import React, { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\n\nconst App = () => {\n  // const [Weather,setWeather] = useState(\"\");\n  const [tog, setTog] = useState(false);\n  const initialValue = useRef(\"\");\n\n  const [showData, setShowData] = useState({\n    name: \"\",\n    temp: \"\",\n    result: \"\",\n    icon: \"\",\n    dailys: [],\n  });\n\n  const key = \"6d6020cfb149e6f2302954d8b2286ca1\";\n  let data;\n  const getData = async () => {\n    const weather = initialValue.current.value;\n    data = await axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?q=${weather}&appid=${key}`\n    );\n    // console.log(data)\n    const dailys = await axios.get(\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${data.data.coord.lat}&lon=${data.data.coord.lon}&appid=${key}`\n    );\n    showData.dailys.length = 0;\n    dailys.data.daily.forEach((elem) => {\n      // console.log(elem)\n      showData.dailys.push(elem);\n    });\n    const celsius = Math.floor(data.data.main.temp - 273.15);\n    // console.log(empty)\n    setShowData({\n      ...showData,\n      name: data.data.name,\n      temp: celsius,\n      result: data.data.weather[0].main,\n      icon: data.data.weather[0].icon,\n    });\n    console.log(showData.dailys);\n    setTog(true);\n\n    // console.log(initialValue.current.value)\n  };\n  return (\n    <>\n      <div className=\"top\">\n        <p className=\"logo\">WeatherCast</p>\n        <p>\n          <i class=\"fas fa-cloud\"></i>\n        </p>\n      </div>\n\n      <input\n        type=\"text\"\n        id=\"try\"\n        ref={initialValue}\n        placeholder=\"Enter Your City Name\"\n        autoComplete=\"off\"\n      />\n      <button id=\"btn\" type=\"submit\" onClick={getData}>\n        <i className=\"fas fa-search\"></i>\n      </button>\n\n      {tog && (\n        <Card\n          name={showData.name}\n          temp={showData.temp}\n          result={showData.result}\n          icon={showData.icon}\n          dailys={showData.dailys}\n        />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\"\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}